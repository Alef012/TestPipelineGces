name: Ruby App CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13.2-alpine
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env: 
          POSTGRES_PASSWORD: postgres

      redis-queue:
        image: redis:6.0.12-alpine

      redis-cache:
        image: redis:6.0.12-alpine

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker-compose -f docker-compose.yml build

  test:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

     - name: Run Tests
       run: docker-compose run --rm app bundle exec rspec

  lint:
    needs: build
    runs-on: ubuntu-22.04
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Run Lint
       run: docker-compose run --rm app bundle exec rubocop
       continue-on-error: true


  deploy:
     name: Push Docker image to Docker Hub
     needs: [test, lint]
     runs-on: ubuntu-22.04
     steps:
      - name: Check o.ut the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
